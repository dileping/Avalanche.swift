#if !canImport(ObjectiveC)
import XCTest

extension AddressTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AddressTests = [
        ("testBech32", testBech32),
    ]
}

extension AdminTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AdminTests = [
        ("testAlias", testAlias),
        ("testChainAlias", testChainAlias),
        ("testLockProfile", testLockProfile),
        ("testMemoryProfile", testMemoryProfile),
        ("testStartCPUProfiler", testStartCPUProfiler),
        ("testStopCPUProfiler", testStopCPUProfiler),
    ]
}

extension HealthTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HealthTests = [
        ("testGetLiveness", testGetLiveness),
    ]
}

extension InfoTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__InfoTests = [
        ("testGetBlockchainID", testGetBlockchainID),
        ("testIsBootstrapped", testIsBootstrapped),
        ("testNetworkID", testNetworkID),
        ("testNetworkName", testNetworkName),
        ("testNodeID", testNodeID),
        ("testNodeIP", testNodeIP),
        ("testNodeVersion", testNodeVersion),
        ("testPeers", testPeers),
        ("testTxFee", testTxFee),
    ]
}

extension KeystoreTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__KeystoreTests = [
        ("testExImDeleteUser", testExImDeleteUser),
        ("testListUsers", testListUsers),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AddressTests.__allTests__AddressTests),
        testCase(AdminTests.__allTests__AdminTests),
        testCase(HealthTests.__allTests__HealthTests),
        testCase(InfoTests.__allTests__InfoTests),
        testCase(KeystoreTests.__allTests__KeystoreTests),
    ]
}
#endif
